1. program -> declaration_list
2. declaration_list -> declaration_list declaration | declaration
3. declaration -> var_declaration | fun_declaration
4. var_declaration -> type_specifier ID ; | type_specifier ID [ #SIZE_ARRAY NUM ] ;
5. type_specifier -> int | void
6. fun_declaration -> type_specifier ID ( params ) compound_stmt
7. params -> param_list | void
8. param_list -> param_list , param | param
9. param -> type_specifier #PID ID | type_specifier #PID ID [ ]
10. compound_stmt -> { local_declarations statement_list }
11. local_declarations -> local_declarations var_declaration | Epsilon
12. statement_list -> statement_list statement | Epsilon
13. statement -> expression_stmt | compound_stmt | selection_stmt | iteration_stmt | return_stmt | switch_stmt
14. expression_stmt -> expression ; | break ;#BREAK | ;
15. selection_stmt -> if ( expression ) #SAVE statement endif #JPF | if ( expression ) #SAVE statement else #JPF_SAVE statement endif #JP
16. iteration_stmt -> while #LABEL ( expression ) #SAVE statement #WHILE
17. return_stmt -> return ; | return expression ;
18. switch_stmt -> #SWITCH switch ( expression ) { case_stmts default_stmt }
19. case_stmts -> case_stmts case_stmt | Epsilon
20. case_stmt -> case #CASE NUM : statement_list
21. default_stmt -> default #DEFAULT : statement_list | Epsilon
22. expression -> var = expression #ASSIGN | simple_expression
23. var -> #PID ID | #PID ID [ expression ] #ARR_ASSIGN
24. simple_expression -> additive_expression #PUSH relop additive_expression #OP | additive_expression
25. relop -> < | == 
26. additive_expression -> additive_expression #PUSH addop term #OP | term
27. addop -> + | -
28. term -> term #PUSH mulop factor #OP | factor
29. mulop -> * | /
30. factor -> ( expression ) | var | call | #PUSH NUM
31. call -> #PID ID ( args ) #PRINT
32. args -> arg_list | Epsilon
33. arg_list -> arg_list , expression | expression
34. PID -> Epsilon
35. SIZE_ARRAY -> Epsilon
35. PUSH -> Epsilon
36. SWITCH -> Epsilon
37. CASE -> Epsilon
38. DEFAULT -> Epsilon


Keywords: else if int return void while switch case default break endif

Special symbols: + - * / < == = : ; , ( ) [ ] { } /* */ //

ID = letter letter*
NUM = digit digit*
letter = a | .. | z | A | .. | Z
digit = 0 | .. | 9

Comments: /* ... */

